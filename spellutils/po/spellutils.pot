# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2000-04-23 10:12+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"

#: pospell.c:155
msgid "only one -l option is allowed"
msgstr ""

#. all possible cases should have been stated
#: newsbody.c:185 pospell.c:178
#, c-format
msgid "getopt returned impossible value: %d ('%c')"
msgstr ""

#: pospell.c:199
msgid ""
"Usage: pospell [-fsv] [-l language] -n pofile -p program\n"
"       [-- [program-arguments...]]\n"
"\n"
"Copies all translated strings from `pofile' to a temporary\n"
"file (the `spellfile') and then calls the program `program'\n"
"(typically a spell checker) with all `program-arguments'.\n"
"Afterwards the possibly changed translation is copied back\n"
"into the `pofile'.\n"
"\n"
"If `pofile' is specified as `-', pospell will use its standard\n"
"input and standard output.\n"
"\n"
"`%f' in the `program arguments' will be expanded to the name of\n"
"the `spellfile'. Use `%%' for a real `%' character.\n"
"\n"
"The flags mean:\n"
" -f: The called program is a filter so don't make a temporary\n"
"     file, but pipe `spellfile' to the standard input of the\n"
"     `program' and later read it back from its standard output.\n"
" -l language: Only translations with the indicated language code\n"
"     are copied to the `spellfile'.\n"
" -s: quit with an error message if the `pofile' or `spellfile'\n"
"     have unrecognized formats.\n"
" -v: Print version and exit.\n"
msgstr ""

#: newsbody.c:287 pospell.c:276
#, c-format
msgid "%s died with signal \"%s\""
msgstr ""

#: newsbody.c:290 pospell.c:279
#, c-format
msgid "%s died with signal no. %d"
msgstr ""

#: newsbody.c:297 pospell.c:286
#, c-format
msgid "child process couldn't execute %s"
msgstr ""

#: newsbody.c:299 pospell.c:288
#, c-format
msgid "%s returned failure exit code %d"
msgstr ""

#: newsbody.c:302 pospell.c:291
#, c-format
msgid "impossible status from child process: %x"
msgstr ""

#: pospell_write.c:141
#, c-format
msgid ""
"I don't understand this line in the .po file:\n"
"%s"
msgstr ""

#: pospell_read.c:67
msgid ""
"found marker for a removed item in the spell file,\n"
"but cannot find a corresponding item in the po file"
msgstr ""

#: pospell_read.c:124
#, c-format
msgid ""
"found line with unknown content in the spell file:\n"
"%s"
msgstr ""

#: newsbody.c:205
msgid ""
"Usage: newsbody [-fhqsv] [-k headername] -n message -p program\n"
"       [-- [program-arguments...]]\n"
"\n"
"Copies the body of the e-mail or usenet message in `message'\n"
"to a temporary file (the `bodyfile') and then calls the program\n"
"`program' (e.g. a spell checker) with all `program-arguments'.\n"
"Afterwards the possibly changed `bodyfile' is copied back into\n"
"the `message'.\n"
"\n"
"If `message' is specified as `-', newsbody will use its\n"
"standard input and standard output.\n"
"\n"
"`%f' in the `program arguments' will be expanded to the name of\n"
"the `bodyfile'. Use `%%' for a real `%' character.\n"
"\n"
"The flags mean:\n"
" -f: The called program is a filter so don't make a temporary\n"
"     file, but pipe `bodyfile' to the standard input of the\n"
"     `program' and later read it back from its standard output.\n"
" -h: keep the entire header. This flag should also be used\n"
"     if 'message' doesn't have a header at all.\n"
" -k headername: keep these header lines in the `bodyfile'.\n"
"     (Multiple -k flags are allowed).\n"
" -q: Also remove quotes from the `bodyfile'.\n"
"     Lines starting with `>' are considered quotes.\n"
" -s: Also remove signature from the `bodyfile'.\n"
"     The signature is all lines from the first signature separator\n"
"     (i.e. `-- ') to the bottom of the message.\n"
" -v: Print version and exit.\n"
msgstr ""

#: newsbody_read.c:109
msgid ""
"found marker for a removed line in the body file,\n"
"but cannot find a corresponding line in the message file"
msgstr ""

#. This cannot happen - we have at least the ungetted char to read
#: header.c:57
msgid "internal error while reading a header continuation"
msgstr ""

#: lib.c:37 lib.c:47
msgid "could not allocate memory"
msgstr ""

#: lib.c:70
msgid "reading file"
msgstr ""

#: lib.c:95
msgid "writing file"
msgstr ""

#: lib.c:103
#, c-format
msgid "open %s for reading"
msgstr ""

#: lib.c:112
#, c-format
msgid "open %s for writing"
msgstr ""

#: lib.c:119
msgid "closing file"
msgstr ""

#: lib.c:127
msgid "making temporary filename"
msgstr ""

#: lib.c:134
#, c-format
msgid "unlink %s"
msgstr ""

#: lib.c:142
#, c-format
msgid "rename %s %s"
msgstr ""

#: lib.c:155
#, c-format
msgid "stat %s"
msgstr ""

#: lib.c:164
#, c-format
msgid "read from %s"
msgstr ""

#: lib.c:166
#, c-format
msgid "write to %s"
msgstr ""

#: lib.c:194
msgid "error in child process"
msgstr ""

#: lib.c:194
msgid "error"
msgstr ""

#: lib.c:205
#, c-format
msgid ", errno = %d"
msgstr ""

#: exec.c:38 exec.c:93
msgid "fork"
msgstr ""

#: exec.c:54
msgid "open terminal read"
msgstr ""

#: exec.c:56 exec.c:106
msgid "dup2 stdin"
msgstr ""

#: exec.c:58
msgid "close extra terminal read fd"
msgstr ""

#: exec.c:63
msgid "open terminal write"
msgstr ""

#: exec.c:65 exec.c:113
msgid "dup2 stdout"
msgstr ""

#: exec.c:67
msgid "close extra terminal write fd"
msgstr ""

#: exec.c:70 exec.c:118
#, c-format
msgid "exec %s"
msgstr ""

#: exec.c:87
msgid "pipe for output"
msgstr ""

#: exec.c:89
msgid "pipe for input"
msgstr ""

#: exec.c:104
msgid "close write end of output pipe"
msgstr ""

#: exec.c:108 exec.c:123
msgid "close read end of output pipe"
msgstr ""

#: exec.c:111
msgid "close read end of input pipe"
msgstr ""

#: exec.c:115 exec.c:128
msgid "close write end of input pipe"
msgstr ""

#: exec.c:125
msgid "fdopen write end of output pipe"
msgstr ""

#: exec.c:130
msgid "fdopen read end of input pipe"
msgstr ""

#: exec.c:138
msgid "waiting for child"
msgstr ""
